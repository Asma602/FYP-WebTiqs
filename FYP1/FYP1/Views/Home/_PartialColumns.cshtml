@model IEnumerable<FYP1.Models.Column>

    <style>
        .backColor {
            background-color: #00b297;
        }
        .inputWidth{
            font-size:13px;
        }
        .btns{
            background-color: #00b297;
            border-radius: 5px;
            width:120px;
        }
        .columnsDisplay{
            margin-left:130px;
        }
    </style>
    <section class="columnsDisplay" id="disPlayColumns">
        <span id="invalidColumnExist" style="color:red"></span>
        <form>

            <div class="form-row ">
                <div class="col" id="firstChild">
                    <input type="text" class="form-control inputWidth" id="fieldName" 
                           placeholder="Attribute name"><span id="invalidFieldName" style="color:red">*</span>
                </div>
                <div class="col mt-3">
                    <select class="form-control inputWidth" id="dataType">
                        <option selected disabled>choose</option>
                        <option value="int">Number</option>
                        <option value="string">text</option>
                        <option value="date">Date</option>
                        <option value="boolean">True/False</option>
                        <option value="email">Email</option>
                        <option value="password">Password</option>
                        @*<option value="file">File</option>*@
                        <option value="url">Web Link</option>
                        @*<option value="search">Search</option>*@
                        <option value="date">Date</option>
                        <option value="textarea">Text Area</option>
                    </select><span id="invalidDataType" hide style="color:red">*</span>
                </div>
                <div class="col mt-3">
                    <select class="form-control inputWidth" id="required">
                        <option selected disabled>Is Required</option>
                        <option value="0">No</option>
                        <option value="1">Yes</option>

                    </select><span id="invalidRequired" hide style="color:red">*</span>
                </div>
                <div class="col">
                    <input type="number" class="form-control inputWidth" id="minLength" placeholder="Min Length" min="1"><span id="invalidMinLength" hide style="color:red">*</span>
                </div>
                <div class="col">
                    <input type="number" class="form-control inputWidth" id="maxLength" placeholder="Max Length" min="1"><span id="invalidMaxLength" hide style="color:red">*</span>
                </div>

                <div class="col" id="lastChild">
                    <input type="button" onclick="addColumnToTable();" class="btn backColor btns text-capitalize" value="Add">
                </div>
                <div class="col" id="lastChild">
                    <input type="button" onclick="saveTable();" id="saveTableId" class="btn backColor btns text-capitalize" disabled value="Save">
                </div>
            </div>
        </form>
        <table class="table table-hover table-bordered table-light">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Attribute Name</th>
                    <th scope="col">Data Type</th>
                    <th scope="col">Is Required</th>
                    <th scope="col">Min Length</th>
                    <th scope="col">Max Length</th>

                    <th scope="col">Manage</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.name</td>
                        <td>@item.dataType</td>
                        @{ string required; }
                        @if (item.required == 0)
                        {
                            required = "No";
                        }
                        else
                        {
                            required = "Yes";
                        }
                        <td>@required</td>
                        <td>@item.minLength</td>
                        <td>@item.maxLength</td>
                        <td>

                            <a onclick="updateColumn(@item.id)" class="ml-1"><i class="ml-4 fa fa-edit"></i></a>
                            <a onclick="deleteColumn(@item.id)"><i class="fa fa-trash-o"></i></a>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </section>
<script>
    function saveTable(){
     $.ajax({
            url: "/Home/saveTable",
            type: "GET",
            success: function (data) {
                $("#slideBarPTabless").html(data);
                location.reload();
            },
            error: function (err) {
                console.error();
            }
     });
         $("#disPlayColumns").html(" ");
    }

    function addColumn(){
         $.ajax({
            url: "/Home/addColumns",
            type: "POST",
             data: {
                fieldName:$("#fieldName").val(),
                dataType:$("#dataType").val(),
                required:$("#required").val(),
                minLength:$("#minLength").val(),
                maxLength:$("#maxLength").val(),
                fKey:$("#fKey").val(),
            },
            success: function (data) {
                $("#mainContainer").html(data);
            },
            error: function (err) {
                console.error();
            }
        });
    }
    function deleteColumn(n){
    if(confirm("Are you sure you want to delete this column?")){
         $.ajax({
            url: "/Home/deleteColumn",
            type: "POST",
             data: {
               columnId:n
            },
            success: function (data) {
                $("#mainContainer").html(data);
            },
            error: function (err) {
                console.error();
            }
        });
    }
    else{
    	return;
    }
    
    }
    function updateColumn(n){
      $.ajax({
            url: "/Home/updateColumn",
            type: "POST",
             data: {
               columnId:n
            },
            success: function (data) {
                $("#mainContainer").html(data);
            },
            error: function (err) {
                console.error();
            }
        });
    }
</script>

<script>


    $(function() {
     var  fnameEror=1;
        var  dataTError=1;
        var  requiredError=1;
        var  minLengthError=1;
        var  maxLengthError=1;
         if(@Model.Count()>0)
               $("#saveTableId").prop('disabled',false);
        else
       $("#saveTableId").prop('disabled',);
            $("#invalidFieldName").hide();
              $("#invalidDataType").hide();
              $("#invalidRequired").hide();
              $("#invalidMinLength").hide();
              $("#invalidMaxLength").hide();
            $("#fieldName").focusout(function(){
                 fnameEror=fieldNameCheck();
             });
            $("#dataType").focusout(function(){
                dataTError= dataTypeCheck();
             });
             $("#required").focusout(function(){
                 requiredError= requiredCheck();
             });
             $("#minLength").focusout(function(){
                 minLengthError= minLengthCheck();
             });
             $("#maxLength").focusout(function(){
                  maxLengthError=maxLengthCheck();
             });

        });

      function addColumnToTable(n){

       dataTError= dataTypeCheck();
       fnameEror=  fieldNameCheck();
       maxLengthError=  maxLengthCheck();
       minLengthError=  minLengthCheck();
       requiredError= requiredCheck();


            if(fnameEror && dataTError  &&  requiredError && minLengthError &&   maxLengthError){
              // addColumn();
               // $("#saveTableId").prop('disabled',false);
                if(@Model.Count()==0)
                     checkColumnExit();
                else
                    checkCExit();
            }
            else{
                $("#saveTableId").prop('disabled',true);
            }
    }
    function checkCExit(){
         $.ajax({
            url: "/Home/checkCExit",
            type: "POST",
             data: {
                columnName: $("#fieldName").val()
            },
            success: function (data) {
              if(data==1){
                   addColumn();
                 $("#saveTableId").prop('disabled',false);
              
                  $("#invalidColumnExist").html("");
              }
              else if(data==0)
                $("#invalidColumnExist").html("Column Name already Exit.");
            },
            error: function (err) {
                console.error();
            }
        });
    }
    function checkColumnExit(){
         $.ajax({
            url: "/Home/checkColumnExit",
            type: "POST",
             data: {
                columnName: $("#fieldName").val()
            },
            success: function (data) {
              if(data==1){
                   addColumn();
                 $("#saveTableId").prop('disabled',false);
              
                  $("#invalidColumnExist").html("");
              }
              else if(data==0)
                $("#invalidColumnExist").html("Column Name already Exit.");
            },
            error: function (err) {
                console.error();
            }
        });
    }

</script>
<script src="~/lib/jquery/dist/jquery.js"></script>

<script src="~/js/columnValidation.js"></script>